(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._ownerId=e.owner._id,this.cardId=e._id,this._likes=e.likes,this._myId=a,this._cardSelector=i,this._handleCardClick=n,this._handleLikeClick=r,this._handleTrashBinClick=o}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".place").cloneNode(!0)}},{key:"renderCard",value:function(){var e=this;return this._element=this._getTemplate(),this._image=this._element.querySelector(".place__image"),this._title=this._element.querySelector(".place__title"),this._image.src=this._link,this._image.alt=this._name,this._title.textContent=this._name,this._trashBin=this._element.querySelector(".place__delete"),this._likeCounter=this._element.querySelector(".place__like-counter"),this._likeCounter.textContent=this._likes.length,this._likeBtn=this._element.querySelector(".place__like"),this.hasMyLike=this._likes.some((function(t){return t._id===e._myId})),this._ownerId!=this._myId&&this._trashBin.remove(),this._likes.some((function(t){return t._id===e._myId}))&&this._likeBtn.classList.add("place__like_active"),this._setCardActionsListeners(),this._element}},{key:"deleteMyLike",value:function(e){this._likeBtn.classList.remove("place__like_active"),this._likeCounter.textContent=e}},{key:"addMyLike",value:function(e){this._likeBtn.classList.add("place__like_active"),this._likeCounter.textContent=e}},{key:"removeCardFromServer",value:function(){this._element.remove(),this._element=null}},{key:"_setCardActionsListeners",value:function(){var e=this;this._likeBtn.addEventListener("click",(function(){return e._handleLikeClick(e,e.hasMyLike)})),this._trashBin.addEventListener("click",(function(){return e._handleTrashBinClick(e)})),this._image.addEventListener("click",(function(){return e._handleCardClick(e._name,e._link)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._popupForm=t.popupForm,this._popupInputField=t.popupField,this._popupSaveButton=t.popupSaveButton,this._fieldError=t.popupFieldError,this._errorActive=t.errorActive,this._buttonDisabled=t.popupButtonDisabled,this._inputList=Array.from(this._form.querySelectorAll(this._popupInputField)),this._saveBtn=this._form.querySelector(this._popupSaveButton)}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setInputListeners()}},{key:"_setInputListeners",value:function(){var e=this;this._toggleSaveButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleSaveButtonState()}))}))}},{key:"_showInputError",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._fieldError),n.textContent=t,n.classList.add(this._errorActive)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._fieldError),t.classList.remove(this._errorActive),t.textContent=""}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidField",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleSaveButtonState",value:function(){this._hasInvalidField()?(this._saveBtn.classList.add(this._buttonDisabled),this._saveBtn.disabled=!0):(this._saveBtn.classList.remove(this._buttonDisabled),this._saveBtn.disabled=!1)}},{key:"resetValidation",value:function(){var e=this;this._toggleSaveButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._containerElement=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderSectionItems",value:function(e){var t=this;e.forEach((function(e){var n=t._renderer(e);t.setItem(n)}))}},{key:"setItem",value:function(e){this._containerElement.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),a=document.querySelector(".popup_type_edit-form"),u=document.querySelector(".profile__edit-button"),c=document.querySelector(".popup__container_type_edit"),l=(document.querySelector(".profile__title"),document.querySelector(".popup_type_add-form")),s=a.querySelector(".popup__field_type_name"),p=a.querySelector(".popup__field_type_description"),f=(l.querySelector(".popup__field_type_place"),l.querySelector(".popup__field_type_link"),document.querySelector(".profile__add-button")),h=document.querySelector(".popup__container_type_add"),d=document.querySelector(".popup__container_type_avatar"),_=(h.querySelector(".popup__save-button"),document.querySelector(".profile__avatar-button")),y={popupForm:".popup__container",popupField:".popup__field",popupSaveButton:".popup__save-button",popupFieldError:"popup__field_type_error",errorActive:"error_active",popupButtonDisabled:"popup__save-button_disabled"};function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t,this._popupElement=document.querySelector(t),this._closeOnEsc=this._closeOnEsc.bind(this)}var t,n;return t=e,(n=[{key:"openPopup",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._closeOnEsc)}},{key:"closePopup",value:function(){document.removeEventListener("keydown",this._closeOnEsc),this._popupElement.classList.remove("popup_opened")}},{key:"_closeOnEsc",value:function(e){27===e.keyCode&&this.closePopup()}},{key:"_handleCloseOnOverlay",value:function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-button"))&&this.closePopup()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){e._handleCloseOnOverlay(t)}))}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=E(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function E(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}function S(e,t){return S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},S(e,t)}function w(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._handleFormSubmit=e,n._form=n._popupElement.querySelector(".popup__container"),n._submitButton=n._form.querySelector(".popup__save-button"),n._permanentText=n._submitButton.textContent,n._inputList=Array.from(n._form.querySelectorAll(".popup__field")),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;g(O(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._permanentText}},{key:"closePopup",value:function(){this._form.reset(),g(O(a.prototype),"closePopup",this).call(this)}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(m);function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=I(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function I(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function q(e,t){return q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},q(e,t)}function B(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._popupElement.querySelector(".popup__pic"),t._title=t._popupElement.querySelector(".popup__pic-title"),t}return t=a,(n=[{key:"openPopup",value:function(e,t){this._image.src=t,this._title.textContent=e,this._image.alt=e,j(T(a.prototype),"openPopup",this).call(this)}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(m);function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=D(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},A.apply(this,arguments)}function D(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=M(e)););return e}function F(e,t){return F=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},F(e,t)}function V(e,t){if(t&&("object"===x(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function M(e){return M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},M(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&F(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=M(r);if(o){var n=M(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return V(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._form=n._popupElement.querySelector(".popup__delete-container"),n._submitButton=n._form.querySelector(".popup__save-button"),n._handleFormSubmit=e,n._permanentText=n._submitButton.textContent,n}return t=a,(n=[{key:"openPopup",value:function(e){A(M(a.prototype),"openPopup",this).call(this),this._card=e}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Удаление...":this._permanentText}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._card)})),A(M(a.prototype),"setEventListeners",this).call(this)}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(m);function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var G=function(){function e(t){var n=t.nameSelector,r=t.aboutSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._aboutElement=document.querySelector(r),this._avatarElement=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent,avatar:this._avatarElement.src}}},{key:"setUserInfo",value:function(e){this._myId=e._id,this._nameElement.textContent=e.name,this._aboutElement.textContent=e.about,this._avatarElement.src=e.avatar}},{key:"returnMyId",value:function(){return this._myId}}])&&J(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var $=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_handleError",value:function(e){return e.ok?e.json():Promise.reject("Произошла ошибка ".concat(e.status,", что-то поломалось. Сочувствуем:("))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{method:"GET",headers:this._headers}).then(this._handleError)}},{key:"addCardtoServer",value:function(e){return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleError)}},{key:"getUserData",value:function(){return fetch("".concat(this._baseUrl,"users/me"),{method:"GET",headers:this._headers}).then(this._handleError)}},{key:"changeUserData",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._handleError)}},{key:"changeAvatar",value:function(e){var t=e.avatar;return fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._handleError)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleError)}},{key:"addLikeToCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._handleError)}},{key:"deleteLikeFromCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleError)}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-41/",headers:{authorization:"d9af2d99-485f-4815-ad38-c00dc8b82856","content-Type":"application/json"}});Promise.all([$.getUserData(),$.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?z(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Y.setUserInfo(o),K.renderSectionItems(i)})).catch((function(e){alert(e)}));var K=new i({renderer:Z},".places"),Q=new r(y,h),W=new r(y,c),X=new r(y,d);Q.enableValidation(),W.enableValidation(),X.enableValidation();var Y=new G({nameSelector:".profile__title",aboutSelector:".profile__subtitle",avatarSelector:".profile__pic"});function Z(e){return new t(e,ie,ae,ue,".places-template_type_default",Y.returnMyId()).renderCard()}var ee=new R(".popup_type_image");ee.setEventListeners();var te=new L((function(e){te.renderLoading(!0),$.changeUserData(e).then((function(e){Y.setUserInfo(e),te.closePopup()})).catch((function(e){alert(e)})).finally((function(){te.renderLoading(!1)}))}),".popup_type_edit-form");te.setEventListeners();var ne=new L((function(e){ne.renderLoading(!0),$.addCardtoServer(e).then((function(e){K.setItem(Z(e)),ne.closePopup()})).catch((function(e){alert(e)})).finally((function(){ne.renderLoading(!1)}))}),".popup_type_add-form");ne.setEventListeners();var re=new L((function(e){re.renderLoading(!0),$.changeAvatar(e).then((function(e){Y.setUserInfo(e),re.closePopup()})).catch((function(e){return console.log(e)})).finally((function(){re.renderLoading(!1)}))}),".popup_type_avatar-form");re.setEventListeners();var oe=new N((function(e){oe.renderLoading(!0),$.deleteCard(e.cardId).then((function(){e.removeCardFromServer(),oe.closePopup()})).catch((function(e){alert(e)})).finally((function(){oe.renderLoading(!1)}))}),".popup_type_delete");function ie(e,t){ee.openPopup(e,t)}function ae(e){e.hasMyLike?$.deleteLikeFromCard(e.cardId).then((function(t){e.deleteMyLike(t.likes.length)})).catch((function(e){alert(e)})):$.addLikeToCard(e.cardId).then((function(t){e.addMyLike(t.likes.length)})).catch((function(e){alert(e)}))}function ue(e){oe.openPopup(e)}oe.setEventListeners(),_.addEventListener("click",(function(){X.resetValidation(),re.openPopup()})),u.addEventListener("click",(function(){var e=Y.getUserInfo(),t=e.name,n=e.about;s.value=t,p.value=n,W.resetValidation(),te.openPopup()})),f.addEventListener("click",(function(){Q.resetValidation(),ne.openPopup()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,