(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._ownerId=e.owner._id,this._cardId=e._id,this._likes=e.likes,this._myId=a,this._cardSelector=i,this._handleCardClick=n,this._handleLikeClick=r,this._handleTrashBinClick=o}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".place").cloneNode(!0)}},{key:"renderCard",value:function(){var e=this;return this._element=this._getTemplate(),this._setCardActionsListeners(),this._image=this._element.querySelector(".place__image"),this._title=this._element.querySelector(".place__title"),this._image.src=this._link,this._image.alt=this._name,this._title.textContent=this._name,this._trashBin=this._element.querySelector(".place__delete"),this._likeCounter=this._element.querySelector(".place__like-counter"),this._likeCounter.textContent=this._likes.length,this._likeBtn=this._element.querySelector(".place__like"),this.hasMyLike=this._likes.some((function(t){return t._id===e._myId})),this._ownerId!=this._myId&&this._trashBin.remove(),this._likes.some((function(t){return t._id===e._myId}))&&this._likeBtn.classList.add("place__like_active"),this._element}},{key:"deleteMyLike",value:function(){this._likeBtn.classList.remove("place__like_active"),this._likeCounter.textContent=this._likes.length-1}},{key:"addMyLike",value:function(){this._likeBtn.classList.add("place__like_active"),this._likeCounter.textContent=this._likes.length+1}},{key:"removeCardFromServer",value:function(){this._element.remove(),this._element=null}},{key:"_setCardActionsListeners",value:function(){var e=this;this._element.querySelector(".place__like").addEventListener("click",(function(){return e._handleLikeClick(e,e.hasMyLike)})),this._element.querySelector(".place__delete").addEventListener("click",(function(){return e._handleTrashBinClick(e)})),this._element.querySelector(".place__image").addEventListener("click",(function(){return e._handleCardClick(e._name,e._link)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._popupForm=t.popupForm,this._popupInputField=t.popupField,this._popupSaveButton=t.popupSaveButton,this._fieldError=t.popupFieldError,this._errorActive=t.errorActive,this._buttonDisabled=t.popupButtonDisabled,this._inputList=Array.from(this._form.querySelectorAll(this._popupInputField)),this._saveBtn=this._form.querySelector(this._popupSaveButton)}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setInputListeners()}},{key:"_setInputListeners",value:function(){var e=this;this._toggleSaveButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleSaveButtonState()}))}))}},{key:"_showInputError",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._fieldError),n.textContent=t,n.classList.add(this._errorActive)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._fieldError),t.classList.remove(this._errorActive),t.textContent=""}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidField",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleSaveButtonState",value:function(){this._hasInvalidField()?(this._saveBtn.classList.add(this._buttonDisabled),this._saveBtn.disabled=!0):(this._saveBtn.classList.remove(this._buttonDisabled),this._saveBtn.disabled=!1)}},{key:"resetValidation",value:function(){var e=this;this._toggleSaveButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=o,this._items=r,this._containerElement=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderSectionItems",value:function(){var e=this;this._items.forEach((function(t){var n=e._renderer(t);e.setItem(n)}))}},{key:"setItem",value:function(e){this._containerElement.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),a=document.querySelector(".popup_type_edit-form"),u=document.querySelector(".profile__edit-button"),c=document.querySelector(".popup__container_type_edit"),l=(document.querySelector(".profile__title"),document.querySelector(".popup_type_add-form")),s=a.querySelector(".popup__field_type_name"),p=a.querySelector(".popup__field_type_description"),f=(l.querySelector(".popup__field_type_place"),l.querySelector(".popup__field_type_link"),document.querySelector(".profile__add-button")),h=document.querySelector(".popup__container_type_add"),_=document.querySelector(".popup__container_type_avatar"),d=(h.querySelector(".popup__save-button"),document.querySelector(".popup_type_delete").querySelector(".popup__save-button"),document.querySelector(".profile__pic")),y={popupForm:".popup__container",popupField:".popup__field",popupSaveButton:".popup__save-button",popupFieldError:"popup__field_type_error",errorActive:"error_active",popupButtonDisabled:"popup__save-button_disabled"};function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t,this._popupElement=document.querySelector(t),this._closeOnEsc=this._closeOnEsc.bind(this)}var t,n;return t=e,(n=[{key:"openPopup",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._closeOnEsc)}},{key:"closePopup",value:function(){document.removeEventListener("keydown",this._closeOnEsc),this._popupElement.classList.remove("popup_opened")}},{key:"_closeOnEsc",value:function(e){27===e.keyCode&&this.closePopup()}},{key:"_handleCloseOnOverlay",value:function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-button"))&&this.closePopup()}},{key:"setEventListeners",value:function(){var e=this;this._closeButton=this._popupElement.querySelector(".popup__close-button"),this._closeButton.addEventListener("click",(function(){e.closePopup()})),this._overlayList=Array.from(document.querySelectorAll(".popup")),this._overlayList.forEach((function(t){t.addEventListener("click",(function(t){e._handleCloseOnOverlay(t)}))}))}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=S(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function S(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}function g(e,t){return g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},g(e,t)}function w(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._handleFormSubmit=e,n._formElement=document.querySelector(n._popupSelector),n._form=n._formElement.querySelector(".popup__container"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=Array.from(this._formElement.querySelectorAll(".popup__field")),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;E(O(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"closePopup",value:function(){this._form.reset(),E(O(a.prototype),"closePopup",this).call(this)}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(m);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function B(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._popupElement.querySelector(".popup__pic"),t._title=t._popupElement.querySelector(".popup__pic-title"),t}return t=a,(n=[{key:"openPopup",value:function(e,t){this._image.src=t,this._title.textContent=e,this._image.alt=e,j(T(a.prototype),"openPopup",this).call(this)}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(m);function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function F(){return F="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=x(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},F.apply(this,arguments)}function x(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=M(e)););return e}function A(e,t){return A=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},A(e,t)}function V(e,t){if(t&&("object"===U(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function M(e){return M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},M(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&A(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=M(r);if(o){var n=M(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return V(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._formElement=document.querySelector(n._popupSelector),n._form=n._formElement.querySelector(".popup__delete-container"),n._handleFormSubmit=e,n}return t=a,(n=[{key:"openPopup",value:function(e){F(M(a.prototype),"openPopup",this).call(this),this._card=e}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._card)})),F(M(a.prototype),"setEventListeners",this).call(this)}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(m);function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var G=function(){function e(t){var n=t.nameSelector,r=t.aboutSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._aboutElement=document.querySelector(r),this._avatarElement=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent}}},{key:"setUserInfo",value:function(e){this._myId=e._id,this._nameElement.textContent=e.name,this._aboutElement.textContent=e.about,this._avatarElement.src=e.avatar}},{key:"returnMyId",value:function(){return this._myId}}])&&J(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_handleError",value:function(e){return e.ok?e.json():Promise.reject("Произошла ошибка, что-то поломалось. Сочувствуем:(")}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{method:"GET",headers:this._headers}).then(this._handleError)}},{key:"addCardtoServer",value:function(e){return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleError)}},{key:"getUserData",value:function(){return fetch("".concat(this._baseUrl,"users/me"),{method:"GET",headers:this._headers}).then(this._handleError)}},{key:"changeUserData",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._handleError)}},{key:"changeAvatar",value:function(e){var t=e.avatar;return fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._handleError)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleError)}},{key:"likeCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._handleError)}},{key:"deleteLikeFromCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleError)}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-41/",headers:{authorization:"d9af2d99-485f-4815-ad38-c00dc8b82856","content-Type":"application/json"}});z.getInitialCards().then((function(e){new i({items:e,renderer:Y},".places").renderSectionItems()})).catch((function(e){alert(e)}));var K=new r(y,h),Q=new r(y,c),W=new r(y,_);K.enableValidation(),Q.enableValidation(),W.enableValidation();var X=new G({nameSelector:".profile__title",aboutSelector:".profile__subtitle",avatarSelector:".profile__pic"});function Y(e){return new t(e,re,oe,ie,".places-template_type_default",X.returnMyId()).renderCard()}z.getUserData().then((function(e){X.setUserInfo(e)})).catch((function(e){return console.log(e)}));var Z=new R(".popup_type_image");Z.setEventListeners();var $=new P((function(e){X.setUserInfo(e),z.changeUserData(e),$.closePopup()}),".popup_type_edit-form");$.setEventListeners();var ee=new P((function(e){z.addCardtoServer(e).then((function(){return ee.closePopup()})).catch((function(e){alert(e)}))}),".popup_type_add-form");ee.setEventListeners();var te=new P((function(e){z.changeAvatar(e).then((function(e){X.setUserInfo(e),te.closePopup()})).catch((function(e){return console.log(e)}))}),".popup_type_avatar-form");te.setEventListeners();var ne=new N((function(e){z.deleteCard(e._cardId).then((function(){e.removeCardFromServer(),ne.closePopup()})).catch((function(e){alert(e)}))}),".popup_type_delete");function re(e,t){Z.openPopup(e,t)}function oe(e,t){t?z.deleteLike(e._cardId).then((function(t){e.deleteMyLike(t.likes)})).catch((function(e){alert(e)})):z.likeCard(e._cardId).then((function(t){e.addMyLike(t.likes)})).catch((function(e){alert(e)}))}function ie(e){ne.openPopup(e)}ne.setEventListeners(),d.addEventListener("click",(function(){te.openPopup()})),u.addEventListener("click",(function(){var e=X.getUserInfo(),t=e.name,n=e.about;s.value=t,p.value=n,Q.resetValidation(),$.openPopup()})),f.addEventListener("click",(function(){K.resetValidation(),ee.openPopup()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNkYixHQUFpQk8sZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xyXG4gIC8vINC60L7QvdGB0YLRgNGD0LrRgtC+0YAg0L/QvtC70YPRh9Cw0LXRgiDQtNCw0L3QvdGL0LUg0LIg0LLQuNC00LUg0L7QsdGK0LXQutGC0LAgZGF0YVxyXG4gIC8vINGC0LDQutC20LUg0L/QvtC70YPRh9Cw0LXRgiDRhNGD0L3QutGG0LjRjiwg0L7Qv9C40YHRi9Cy0LDRjtGJ0LXQtSDRh9GC0L4g0L/RgNC+0LjRgdGF0L7QtNC40YIg0L/RgNC4INC90LDQttCw0YLQuNC4INC90LAg0LrQsNGA0YLQvtGH0LrRg1xyXG4gIC8vINGC0LDQutC20LUg0L/QvtC70YPRh9Cw0LXRgiDRgdC10LvQtdC60YLQvtGAINC00LvRjyDQtNCw0LvRjNC90LXQudGI0LXQs9C+INCy0YvQsdC+0YDQsCDRiNCw0LHQu9C+0L3QsFxyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIGRhdGEsXHJcbiAgICBoYW5kbGVDYXJkQ2xpY2ssXHJcbiAgICBoYW5kbGVMaWtlQ2xpY2ssXHJcbiAgICBoYW5kbGVUcmFzaEJpbkNsaWNrLFxyXG4gICAgY2FyZFNlbGVjdG9yLFxyXG4gICAgdXNlcklkXHJcbiAgKSB7XHJcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgIHRoaXMuX293bmVySWQgPSBkYXRhLm93bmVyLl9pZDtcclxuICAgIHRoaXMuX2NhcmRJZCA9IGRhdGEuX2lkO1xyXG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xyXG4gICAgdGhpcy5fbXlJZCA9IHVzZXJJZDtcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGhhbmRsZUxpa2VDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZVRyYXNoQmluQ2xpY2sgPSBoYW5kbGVUcmFzaEJpbkNsaWNrO1xyXG4gIH1cclxuXHJcbiAgLy/Qv9C+0LvRg9GH0LDQtdGCINC4INC60LvQvtC90LjRgNGD0LXRgiDRgNCw0LfQvNC10YLQutGDINC40LcgdGVtcGxhdGUg0LTQu9GPINC60LDRgNGC0L7Rh9C60LhcclxuICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICBjb25zdCBuZXdDYXJkID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICByZXR1cm4gbmV3Q2FyZDtcclxuICB9XHJcblxyXG4gIC8v0YTQvtGA0LzQuNGA0YPQtdGCINC60LDRgNGC0L7Rh9C60YNcclxuICByZW5kZXJDYXJkKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICB0aGlzLl9zZXRDYXJkQWN0aW9uc0xpc3RlbmVycygpO1xyXG4gICAgdGhpcy5faW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2ltYWdlXCIpO1xyXG4gICAgdGhpcy5fdGl0bGUgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX3RpdGxlXCIpO1xyXG4gICAgdGhpcy5faW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2ltYWdlLmFsdCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl90aXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl90cmFzaEJpbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9fZGVsZXRlXCIpO1xyXG4gICAgdGhpcy5fbGlrZUNvdW50ZXIgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2xpa2UtY291bnRlclwiKTtcclxuICAgIC8v0L7RgtC+0LHRgNCw0LfQuNC8INC00LvQuNC90YMg0LzQsNGB0YHQuNCy0LAg0LrQsNC6INGB0YfQtdGC0YfQuNC6INC70LDQudC60L7QslxyXG4gICAgdGhpcy5fbGlrZUNvdW50ZXIudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XHJcbiAgICB0aGlzLl9saWtlQnRuID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlX19saWtlXCIpO1xyXG4gICAgLy/Qu9C+0LPQuNC60LAg0YLQvtCz0L4sINC60LDQuiDQv9GA0L7QstC10YDRj9C10YLRgdGPINC10YHRgtGMINC70Lgg0LzQvtC5INC70LDQudC6XHJcbiAgICB0aGlzLmhhc015TGlrZSA9IHRoaXMuX2xpa2VzLnNvbWUoKGxpa2UpID0+IGxpa2UuX2lkID09PSB0aGlzLl9teUlkKTtcclxuXHJcbiAgICAvL9C10YHQu9C4INCw0LnQtNC4INGB0L7Qt9C00LDRgtC10LvRjyDQvdC1INGB0L7QstC/0LDQtNCw0LXRgiDRgSDQvNC+0Lgg0LDQudC00LgsINGC0L4g0LrQvtGA0LfQuNC90LrRgyDRg9C00LDQu9C40LxcclxuICAgIGlmICh0aGlzLl9vd25lcklkICE9IHRoaXMuX215SWQpIHtcclxuICAgICAgdGhpcy5fdHJhc2hCaW4ucmVtb3ZlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy/QtdGB0LvQuCDQsiDQvNCw0YHRgdC40LLQtSDQu9Cw0LnQutC+0LIg0LXRgdGC0Ywg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GMINGBINC80L7QuNC8INCw0LnQtNC4LCDRgtC+INC/0YDQuCDQvtGC0YDQuNGB0L7QstC60LUg0LzRiyDQvtGC0YDQuNGB0YPQtdC8INGN0YLQvtGCINC70LDQudC6INGH0LXRgNC90YvQvFxyXG4gICAgaWYgKHRoaXMuX2xpa2VzLnNvbWUoKGxpa2UpID0+IGxpa2UuX2lkID09PSB0aGlzLl9teUlkKSkge1xyXG4gICAgICB0aGlzLl9saWtlQnRuLmNsYXNzTGlzdC5hZGQoXCJwbGFjZV9fbGlrZV9hY3RpdmVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICAvL9C80LXRgtC+0LQg0YPQtNCw0LvQtdC90LjRjyDQu9Cw0LnQutCwXHJcbiAgZGVsZXRlTXlMaWtlKCkge1xyXG4gICAgdGhpcy5fbGlrZUJ0bi5jbGFzc0xpc3QucmVtb3ZlKFwicGxhY2VfX2xpa2VfYWN0aXZlXCIpO1xyXG4gICAgdGhpcy5fbGlrZUNvdW50ZXIudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGggLSAxO1xyXG4gIH1cclxuXHJcbiAgLy/QvNC10YLQvtC0INC00L7QsdCw0LLQu9C10L3QuNGPINC70LDQudC60LBcclxuICBhZGRNeUxpa2UoKSB7XHJcbiAgICB0aGlzLl9saWtlQnRuLmNsYXNzTGlzdC5hZGQoXCJwbGFjZV9fbGlrZV9hY3RpdmVcIik7XHJcbiAgICB0aGlzLl9saWtlQ291bnRlci50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aCArIDE7XHJcbiAgfVxyXG5cclxuICAvL9C80LXRgtC+0LQg0YPQtNCw0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XHJcbiAgcmVtb3ZlQ2FyZEZyb21TZXJ2ZXIoKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XHJcbiAgfVxyXG5cclxuICAvL9C/0LDQutC10YIg0YHQu9GD0YjQsNGC0LXQu9C10Lkg0LrQu9C40LrQvtCyINC00LvRjyDQutCw0LbQtNC+0Lkg0LrQsNGA0YLQvtGH0LrQuFxyXG4gIF9zZXRDYXJkQWN0aW9uc0xpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2VsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2xpa2VcIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxyXG4gICAgICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayh0aGlzLCB0aGlzLmhhc015TGlrZSlcclxuICAgICAgKTtcclxuICAgIHRoaXMuX2VsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2RlbGV0ZVwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2hhbmRsZVRyYXNoQmluQ2xpY2sodGhpcykpO1xyXG4gICAgdGhpcy5fZWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9faW1hZ2VcIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxyXG4gICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9uYW1lLCB0aGlzLl9saW5rKVxyXG4gICAgICApO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICAvL9C/0LXRgNC10LTQsNC10Lwg0L7QsdGK0LXQutGCINC90LDRgdGC0YDQvtC10Log0Lgg0YTQvtGA0LzRgyDQtNC70Y8g0LLQsNC70LjQtNCw0YbQuNC4XHJcbiAgY29uc3RydWN0b3IoY29uZmlndXJhdGlvbiwgZm9ybSkge1xyXG4gICAgdGhpcy5fZm9ybSA9IGZvcm07XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0gPSBjb25maWd1cmF0aW9uLnBvcHVwRm9ybTtcclxuICAgIHRoaXMuX3BvcHVwSW5wdXRGaWVsZCA9IGNvbmZpZ3VyYXRpb24ucG9wdXBGaWVsZDtcclxuICAgIHRoaXMuX3BvcHVwU2F2ZUJ1dHRvbiA9IGNvbmZpZ3VyYXRpb24ucG9wdXBTYXZlQnV0dG9uO1xyXG4gICAgdGhpcy5fZmllbGRFcnJvciA9IGNvbmZpZ3VyYXRpb24ucG9wdXBGaWVsZEVycm9yO1xyXG4gICAgdGhpcy5fZXJyb3JBY3RpdmUgPSBjb25maWd1cmF0aW9uLmVycm9yQWN0aXZlO1xyXG4gICAgdGhpcy5fYnV0dG9uRGlzYWJsZWQgPSBjb25maWd1cmF0aW9uLnBvcHVwQnV0dG9uRGlzYWJsZWQ7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgICB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fcG9wdXBJbnB1dEZpZWxkKVxyXG4gICAgKTtcclxuICAgIHRoaXMuX3NhdmVCdG4gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fcG9wdXBTYXZlQnV0dG9uKTtcclxuICB9XHJcblxyXG4gIC8v0L/Rg9Cx0LvQuNGH0L3Ri9C5INC80LXRgtC+0LQsINC60L7RgtC+0YDRi9C5INC80L7QttC90L4g0LLRi9C30LLQsNGC0Ywg0LjQt9Cy0L3QtSDQutC70LDRgdGB0LBcclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX3NldElucHV0TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICAvL9C00L7QsdCw0LLQuNGC0Ywg0L7QsdGA0LDQsdC+0YLRh9C40LrQuCDRgdC+0LHRi9GC0LjRjyDQuNC90L/Rg9GCINCy0YHQtdC8INC/0L7Qu9GP0LxcclxuICBfc2V0SW5wdXRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl90b2dnbGVTYXZlQnV0dG9uU3RhdGUoKTtcclxuXHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9pc1ZhbGlkKGlucHV0KTtcclxuICAgICAgICB0aGlzLl90b2dnbGVTYXZlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8v0L/QvtC60LDQt9Cw0YLRjCDQuCDRgdC/0YDRj9GC0LDRgtGMINGB0L7QvtCx0YnQtdC90LjRjyDQvtCxINC+0YjQuNCx0LrQtVxyXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dCwgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICBjb25zdCBmb3JtRXJyb3IgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9maWVsZEVycm9yKTtcclxuICAgIGZvcm1FcnJvci50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcclxuICAgIGZvcm1FcnJvci5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQWN0aXZlKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dCkge1xyXG4gICAgY29uc3QgZm9ybUVycm9yID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZmllbGRFcnJvcik7XHJcbiAgICBmb3JtRXJyb3IuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckFjdGl2ZSk7XHJcbiAgICBmb3JtRXJyb3IudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gIH1cclxuXHJcbiAgLy/Qv9GA0L7QstC10YDQutCwINC90LAg0LLQsNC70LjQtNC90L7RgdGC0YwsINC10YHQu9C4INC90LXQstCw0LvQuNC00L3Qviwg0L/QvtC60LDQttC10Lwg0L7RiNC40LHQutGDXHJcbiAgX2lzVmFsaWQoaW5wdXQpIHtcclxuICAgIGlmICghaW5wdXQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXQsIGlucHV0LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8v0L/RgNC+0LLQtdGA0LjQvCwg0LLQtNGA0YPQsyDQstGB0LUg0L/QvtC70Y8g0LLQsNC70LjQtNC90YtcclxuICBfaGFzSW52YWxpZEZpZWxkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKGZ1bmN0aW9uIChpbnB1dCkge1xyXG4gICAgICByZXR1cm4gIWlucHV0LnZhbGlkaXR5LnZhbGlkO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvL9GB0L7RgdGC0L7Rj9C90LjQtSDQutC90L7Qv9C60LggXCLRgdC+0YXRgNCw0L3QuNGC0YxcIiwg0LDQutGC0LjQstC90L4g0LjQu9C4INC90LXRglxyXG4gIF90b2dnbGVTYXZlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZEZpZWxkKCkpIHtcclxuICAgICAgdGhpcy5fc2F2ZUJ0bi5jbGFzc0xpc3QuYWRkKHRoaXMuX2J1dHRvbkRpc2FibGVkKTtcclxuICAgICAgdGhpcy5fc2F2ZUJ0bi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9zYXZlQnRuLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fYnV0dG9uRGlzYWJsZWQpO1xyXG4gICAgICB0aGlzLl9zYXZlQnRuLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL9C80LXRgtC+0LQg0LTQu9GPINC+0YfQuNGB0YLQutC4INC+0YjQuNCx0L7QuiDQuCDRg9C/0YDQsNCy0LvQtdC90LjRjyDRgdC+0YHRgtC+0Y/QvdC40LXQvCDQutC90L7Qv9C60LggXCLRgdC+0YXRgNCw0L3QuNGC0YxcIlxyXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX3RvZ2dsZVNhdmVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0KTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCIvL9C+0YLRgNC40YHRg9C10YIg0LvRjtCx0L7QuSDQvtC00L3QvtGC0LjQv9C90YvQuSDRjdC70LXQvNC10L3RgiDQvdCwINGB0YLRgNCw0L3QuNGG0LVcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgLy/Qv9GA0LjQvdC40LzQsNC10YIg0L7QsdGK0LXQutGCINGBINC80LDRgdGB0LjQstC+0Lwg0LTQsNC90L3Ri9GFINC00LvRjyDQutCw0YDRgtC+0YfQtdC6INC4INGE0YPQvdC60YbQuNC10LksINC40YUg0YHQvtC30LTQsNGO0YnQtdC5XHJcbiAgLy/QstGC0L7RgNGL0Lwg0LDRgNCz0YPQvNC10L3RgtC+0Lwg0L/RgNC40L3QuNC80LDQtdGCINGB0LXQu9C10LrRgtC+0YAg0LrQvtC90YLQtdC50L3QtdGA0LAsINCyINC60L7RgtC+0YDRi9C5INCx0YPQtNC10Lwg0LLRgdGC0LDQstC70Y/RgtGMINC60LDRgNGC0L7Rh9C60LhcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9jb250YWluZXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgICBcclxuICB9XHJcblxyXG4gIC8v0LTQu9GPINC60LDQttC00L7Qs9C+INCw0LnRgtC10LzQsCDQv9GA0LjQvNC10L3Rj9C10YIg0YDQtdC90LTQtdGA0LXRgFxyXG4gIHJlbmRlclNlY3Rpb25JdGVtcygpIHtcclxuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgY29uc3QgY2FyZCA9IHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgICB0aGlzLnNldEl0ZW0oY2FyZCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8v0LLRgdGC0LDQstC40YIg0LIg0YDQsNC30LzQtdGC0LrRg1xyXG4gIHNldEl0ZW0oZWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyRWxlbWVudC5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQge1xyXG4gIHByb2ZpbGVFZGl0QnV0dG9uLFxyXG4gIGNvbnRhaW5lckVkaXRGb3JtU3VibWl0LFxyXG4gIHVzZXJOYW1lLFxyXG4gIHVzZXJOYW1lSW5wdXQsXHJcbiAgdXNlckRlc2NyaXB0aW9uSW5wdXQsXHJcbiAgdXNlclBsYWNlSW5wdXQsXHJcbiAgdXNlckxpbmtJbnB1dCxcclxuICBjYXJkQWRkQnV0dG9uLFxyXG4gIGNvbnRhaW5lckFkZEZvcm1TdWJtaXQsXHJcbiAgRVNDX0NPREUsXHJcbiAgbmV3Q2FyZFNhdmVCdXR0b24sXHJcbiAgY29uZmlnLFxyXG4gIHllc0RlbGV0ZUJ1dHRvbixcclxuICBhdmEsXHJcbiAgY29udGFpbmVyQXZhdGFyRm9ybVN1Ym1pdFxyXG59O1xyXG5jb25zdCBwb3B1cEVkaXRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2VkaXQtZm9ybVwiKTtcclxuY29uc3QgcHJvZmlsZUVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCIpO1xyXG5jb25zdCBjb250YWluZXJFZGl0Rm9ybVN1Ym1pdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucG9wdXBfX2NvbnRhaW5lcl90eXBlX2VkaXRcIlxyXG4pO1xyXG5jb25zdCB1c2VyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdGl0bGVcIik7XHJcblxyXG5jb25zdCBwb3B1cEFkZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfYWRkLWZvcm1cIik7XHJcbmNvbnN0IHVzZXJOYW1lSW5wdXQgPSBwb3B1cEVkaXRGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ZpZWxkX3R5cGVfbmFtZVwiKTtcclxuY29uc3QgdXNlckRlc2NyaXB0aW9uSW5wdXQgPSBwb3B1cEVkaXRGb3JtLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucG9wdXBfX2ZpZWxkX3R5cGVfZGVzY3JpcHRpb25cIlxyXG4pO1xyXG5jb25zdCB1c2VyUGxhY2VJbnB1dCA9IHBvcHVwQWRkRm9ybS5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19maWVsZF90eXBlX3BsYWNlXCIpO1xyXG5jb25zdCB1c2VyTGlua0lucHV0ID0gcG9wdXBBZGRGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ZpZWxkX3R5cGVfbGlua1wiKTtcclxuY29uc3QgY2FyZEFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcclxuY29uc3QgY29udGFpbmVyQWRkRm9ybVN1Ym1pdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucG9wdXBfX2NvbnRhaW5lcl90eXBlX2FkZFwiXHJcbik7XHJcbmNvbnN0IGNvbnRhaW5lckF2YXRhckZvcm1TdWJtaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLnBvcHVwX19jb250YWluZXJfdHlwZV9hdmF0YXJcIlxyXG4pO1xyXG5jb25zdCBFU0NfQ09ERSA9IDI3O1xyXG5jb25zdCBuZXdDYXJkU2F2ZUJ1dHRvbiA9IGNvbnRhaW5lckFkZEZvcm1TdWJtaXQucXVlcnlTZWxlY3RvcihcclxuICBcIi5wb3B1cF9fc2F2ZS1idXR0b25cIlxyXG4pO1xyXG5jb25zdCBwb3B1cENvbmZpcm1hdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV9kZWxldGVcIik7XHJcblxyXG5jb25zdCB5ZXNEZWxldGVCdXR0b24gPSBwb3B1cENvbmZpcm1hdGlvbi5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19zYXZlLWJ1dHRvblwiKTtcclxuY29uc3QgYXZhID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19waWNcIik7XHJcblxyXG4vL9C+0LHRitC10LrRgiDRgSDQvdCw0YHRgtGA0L7QudC60LDQvNC4XHJcbmNvbnN0IGNvbmZpZyA9IHtcclxuICBwb3B1cEZvcm06IFwiLnBvcHVwX19jb250YWluZXJcIixcclxuICBwb3B1cEZpZWxkOiBcIi5wb3B1cF9fZmllbGRcIixcclxuICBwb3B1cFNhdmVCdXR0b246IFwiLnBvcHVwX19zYXZlLWJ1dHRvblwiLFxyXG4gIHBvcHVwRmllbGRFcnJvcjogXCJwb3B1cF9fZmllbGRfdHlwZV9lcnJvclwiLFxyXG4gIGVycm9yQWN0aXZlOiBcImVycm9yX2FjdGl2ZVwiLFxyXG4gIHBvcHVwQnV0dG9uRGlzYWJsZWQ6IFwicG9wdXBfX3NhdmUtYnV0dG9uX2Rpc2FibGVkXCIsXHJcbn07XHJcbiIsImltcG9ydCB7IEVTQ19DT0RFIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgLy/Qv9C+0LvRg9GH0LDQsNC10YIg0YHQtdC70LXQutGC0L7RgCDQutC+0L3QutGA0LXRgtC90L7Qs9C+INC/0L7Qv9Cw0L/QsCwg0L7QtNC90L7Qs9C+LiDQkCDRjdGC0L4g0L/QvtCy0LXQtNC10L3QuNC1INC+0LTQuNC90LDQutC+0LLQvtC1INC00LvRjyDQutCw0LbQtNC+0LPQviDQv9C+0L/QsNC/0LAuXHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcG9wdXBTZWxlY3RvciA9IHBvcHVwU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG5cclxuICAgIC8vYmluZCwg0LjQvdCw0YfQtSDQv9GA0L7QuNGF0L7QtNC40YIg0L/QvtGC0LXRgNGPINC60L7QvdGC0LXQutGB0YLQsCwg0LLQtdC00Ywg0LTQsNC70YzRiNC1INC80YsgY2xvc2VPbkVzYyDQv9C10YDQtdC00LDQu9C4INGB0LvRg9GI0LDRgtC10LvRjiDQutCw0Log0LrQvtC70LvQsdGN0LpcclxuICAgIHRoaXMuX2Nsb3NlT25Fc2MgPSB0aGlzLl9jbG9zZU9uRXNjLmJpbmQodGhpcyk7XHJcbiAgfVxyXG5cclxuICAvL9C80LXRgtC+0LQg0L7RgtC60YDRi9GC0LjQtSDQu9GO0LHQvtCz0L4g0L/QvtC/0LDQv9CwXHJcbiAgb3BlblBvcHVwKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9jbG9zZU9uRXNjKTtcclxuICB9XHJcblxyXG4gIC8v0LzQtdGC0L7QtCDQt9Cw0LrRgNGL0YLQuNC1INC70Y7QsdC+0LPQviDQv9C+0L/QsNC/0LBcclxuICBjbG9zZVBvcHVwKCkge1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5fY2xvc2VPbkVzYyk7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5lZFwiKTtcclxuICB9XHJcblxyXG4gIC8v0LfQsNC60YDRi9GC0LjQtSDQv9C+INC60L3QvtC/0LrQtSBFU0NcclxuICBfY2xvc2VPbkVzYyhldnQpIHtcclxuICAgIGlmIChldnQua2V5Q29kZSA9PT0gRVNDX0NPREUpIHtcclxuICAgICAgdGhpcy5jbG9zZVBvcHVwKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL9C30LDQutGA0YvRgtC40LUg0L/QviDQutC70LjQutGDINC90LAg0L7QstC10YDQu9C10LlcclxuICBfaGFuZGxlQ2xvc2VPbk92ZXJsYXkoZXZ0KSB7XHJcbiAgICBpZiAoXHJcbiAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBcIikgfHxcclxuICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cF9fY2xvc2UtYnV0dG9uXCIpXHJcbiAgICApIHtcclxuICAgICAgdGhpcy5jbG9zZVBvcHVwKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL9GB0LvRg9GI0LDRgtC10LvQuCDQvdCwINC60L3QvtC/0LrRgyDQt9Cw0LrRgNGL0YLQuNGPINC60LDQttC00L7Qs9C+INC/0L7Qv9Cw0L/QsCDQuCDQvdCwINC30L7QvdGDINC+0LLQtdGA0LvQtdGPXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5wb3B1cF9fY2xvc2UtYnV0dG9uXCJcclxuICAgICk7XHJcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLmNsb3NlUG9wdXAoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX292ZXJsYXlMaXN0ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwXCIpKTtcclxuICAgIHRoaXMuX292ZXJsYXlMaXN0LmZvckVhY2goKG92ZXJsYXkpID0+IHtcclxuICAgICAgb3ZlcmxheS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUNsb3NlT25PdmVybGF5KGV2dCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICAvL9C/0YDQuNC90LjQvNCw0LXRgiDQutC+0LvQu9Cx0Y3QuiDRgdCw0LHQvNC40YLQsCDRhNC+0YDQvNGLLCDQuCDQv9GA0LjQvdC40LzQsNC10YIg0YHQtdC70LXQutGC0L7RgCDQutC+0L3QutGA0LXRgtC90L7Qs9C+INC/0L7Qv9Cw0L/QsCwg0LrQsNC6INCyINGA0L7QtNC40YLQtdC70LVcclxuICBjb25zdHJ1Y3RvcihoYW5kbGVGb3JtU3VibWl0LCBwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3BvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2NvbnRhaW5lclwiKTtcclxuICB9XHJcblxyXG4gIC8v0YHQvtCx0LjRgNCw0LXRgiDQtNCw0L3QvdGL0LUg0L/QvtC70LXQuSDRhNC+0YDQvNGLXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wb3B1cF9fZmllbGRcIilcclxuICAgICk7XHJcbiAgICAvL9GB0L7Qt9C00LDQtdC8INC/0YPRgdGC0L7QuSDQvtCx0YrQtdC60YJcclxuICAgIHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcclxuICAgIC8v0YHQvtCx0LjRgNCw0LXQvCDQsiDQvdC10LPQviDQt9C90LDRh9C10L3QuNGPINCy0YHQtdGFINC/0L7Qu9C10Lkg0LjQtyDRhNC+0YDQvNGLLCDRgSDQutC70Y7Rh9Cw0LzQuCDQvtCx0YrQtdC60YLQsCA9INCw0YLRgNC40LHRg9GC0LDQvNC4INC60LDQttC00L7Qs9C+INC40L3Qv9GD0YLQsFxyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHRoaXMuX2Zvcm1WYWx1ZXM7XHJcbiAgfVxyXG5cclxuICAvL9C/0LXRgNC10LfQsNC/0LjRiNC10Lwg0YDQvtC00LjRgtC10LvRjNGB0LrQuNC1INGB0LvRg9GI0LDRgtC10LvQuCAtINC00L7QsdCw0LLQuNC8INC+0LHRgNCw0LHQvtGC0YfQuNC6INGB0L7QsdGL0YLQuNGPINGE0L7RgNC80YtcclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy/Qv9C10YDQtdC30LDQv9C40YjQtdC8INGA0L7QtNC40YLQtdC70YzRgdC60LjQuSDQvNC10YLQvtC0INC30LDQutGA0YvRgtC40Y8sINGH0YLQvtCx0Ysg0YHQsdGA0LDRgdGL0LLQsNC70LDRgdGMINGE0L7RgNC80LBcclxuICBjbG9zZVBvcHVwKCkge1xyXG4gICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG4gICAgc3VwZXIuY2xvc2VQb3B1cCgpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19waWNcIik7XHJcbiAgICB0aGlzLl90aXRsZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19waWMtdGl0bGVcIik7XHJcbiAgfVxyXG4gIC8v0L/QtdGA0LXQt9Cw0L/QuNGB0YvQstCw0LXRgiDRgNC+0LTQuNGC0LXQu9GM0YHQutC40Lkg0LzQtdGC0L7QtCDQvtGC0LrRgNGL0YLQuNGPLCDRh9GC0L7QsdGLINCyINC/0L7Qv9Cw0L8g0LLRgdGC0LDQstC70Y/Qu9Cw0YHRjCDQutCw0YDRgtC40L3QutCwINC4INC/0L7QtNC/0LjRgdGMXHJcbiAgb3BlblBvcHVwKG5hbWUsIGxpbmspIHtcclxuICAgIHRoaXMuX2ltYWdlLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl90aXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgc3VwZXIub3BlblBvcHVwKCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKGhhbmRsZUZvcm1TdWJtaXQsIHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3BvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2RlbGV0ZS1jb250YWluZXJcIik7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICB9XHJcblxyXG4gIC8v0L/RgNC4INC+0YLQutGA0YvRgtC40Lgg0L/QvtC/0LDQv9CwINC+0LHQvtC30L3QsNGH0LjQvCDQutCw0YDRgtC+0YfQutGDXHJcbiAgb3BlblBvcHVwKGNhcmQpIHtcclxuICAgIHN1cGVyLm9wZW5Qb3B1cCgpO1xyXG4gICAgdGhpcy5fY2FyZCA9IGNhcmQ7XHJcbiAgfVxyXG5cclxuICAvL9C90LUg0L/QtdGA0LXQtNCw0LXQvCDQuNC90L/Rg9GC0YssINC/0LXRgNC10LTQsNC10Lwg0LrQsNGA0YLQvtGH0LrRg1xyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkgeyAgICBcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2NhcmQpO1xyXG4gICAgfSk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH0gXHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgLy/Qv9C+0LvRg9GH0LDQtdGCINC+0LHRitC10LrRgiDRgSDQtNCy0YPQvNGPINGB0LXQu9C10LrRgtC+0YDQsNC80Lgg0L/QvtC70LXQuSAtINC40LzRjyDQuCDQvtC/0LjRgdCw0L3QuNC1XHJcbiAgY29uc3RydWN0b3IoeyBuYW1lU2VsZWN0b3IsIGFib3V0U2VsZWN0b3IsIGF2YXRhclNlbGVjdG9yIH0pIHtcclxuICAgIHRoaXMuX25hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fYWJvdXRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhYm91dFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2F2YXRhckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhclNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIC8v0LLQvtC30LLRgNCw0YnQsNC10YIg0YLQtdC60YPRidC40LUg0YLQtdC60YHRgtC+0LLRi9C1INC30L3QsNGH0LXQvdC40Y8gINGN0LvQtdC80LXQvdGC0L7QsiAg0LjQtyDRgNCw0LfQvNC10YLQutC4KNGH0LjRgtCw0LXQvCDQv9C+0LvRjyDQv9GA0L7RhNC40LvRjyDRgdC+INGB0YLRgNCw0L3QuNGG0YspXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lOiB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCxcclxuICAgICAgYWJvdXQ6IHRoaXMuX2Fib3V0RWxlbWVudC50ZXh0Q29udGVudCxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvL9C/0L7Qu9GD0YfQsNC10YIg0L7QsdGK0LXQutGCINGBINC60LvRjtGH0LDQvNC4INC4INGD0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdGCINCyINGA0LDQt9C80LXRgtC60YMg0LjRhSDQt9C90LDRh9C10L3QuNGPKNC80LXQvdGP0LXQvCDQv9C+0LvRjyDQv9GA0L7RhNC40LvRjyDQvdCwINGB0YLRgNCw0L3QuNGG0LUpXHJcbiAgc2V0VXNlckluZm8oZGF0YSkge1xyXG4gICAgLy/QvtCx0YrQtdC60YIg0L/QvtC70YPRh9C40YIg0LXRidC1INC40LTQtdC90YLQuNGE0LjQutCw0YLQvtGAINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xyXG4gICAgdGhpcy5fbXlJZCA9IGRhdGEuX2lkO1xyXG4gICAgdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9hYm91dEVsZW1lbnQudGV4dENvbnRlbnQgPSBkYXRhLmFib3V0O1xyXG4gICAgdGhpcy5fYXZhdGFyRWxlbWVudC5zcmMgPSBkYXRhLmF2YXRhcjtcclxuICB9XHJcblxyXG4gIC8v0LLQtdGA0L3QtdC8INC80L7QuSDQsNC50LTQuFxyXG4gIHJldHVybk15SWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fbXlJZDtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IHsgaW5pdGlhbENhcmRzIH0gZnJvbSBcIi4uL3V0aWxzL2luaXRpYWxDYXJkcy5qc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcclxuaW1wb3J0IHtcclxuICBwcm9maWxlRWRpdEJ1dHRvbixcclxuICBjb250YWluZXJFZGl0Rm9ybVN1Ym1pdCxcclxuICB1c2VyTmFtZUlucHV0LFxyXG4gIHVzZXJEZXNjcmlwdGlvbklucHV0LFxyXG4gIGNhcmRBZGRCdXR0b24sXHJcbiAgY29udGFpbmVyQWRkRm9ybVN1Ym1pdCxcclxuICBjb25maWcsXHJcbiAgYXZhLFxyXG4gIGNvbnRhaW5lckF2YXRhckZvcm1TdWJtaXQsXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuLy/RgdC+0LfQtNCw0LTQuNC8INGN0LrQt9C10LzQv9C70Y/RgCDQutC70LDRgdGB0LAg0LDQv9C4INC00LvRjyDRgNCw0LHQvtGC0Ysg0YEg0LfQsNC/0YDQvtGB0LDQvNC4INC90LAg0YHQtdGA0LLQtdGAXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC00MS9cIixcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBcImQ5YWYyZDk5LTQ4NWYtNDgxNS1hZDM4LWMwMGRjOGI4Mjg1NlwiLFxyXG4gICAgXCJjb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgfSxcclxufSk7XHJcblxyXG4vL9C/0L7Qu9GD0YfQuNC8INC60LDRgNGC0L7Rh9C60Lgg0YEg0YHQtdGA0LLQtdGA0LBcclxuY29uc3QgY2FyZHMgPSBhcGkuZ2V0SW5pdGlhbENhcmRzKCk7XHJcblxyXG5jYXJkc1xyXG4gIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAvL9GB0L7Qt9C00LDQtdC8INGN0LrQt9C10LzQv9C70Y/RgCDRgdC10LrRhtC40LgsINC60L7RgtC+0YDQsNGPINC+0YLQstC10YfQsNC10YIg0LfQsCDQvtGC0YDQuNGB0L7QstC60YMg0L3QsCDRgdGC0YDQsNC90LjRhtC1XHJcbiAgICBjb25zdCBjYXJkc0xpc3QgPSBuZXcgU2VjdGlvbihcclxuICAgICAge1xyXG4gICAgICAgIGl0ZW1zOiBkYXRhLFxyXG4gICAgICAgIHJlbmRlcmVyOiBjcmVhdGVDYXJkLFxyXG4gICAgICB9LFxyXG4gICAgICBcIi5wbGFjZXNcIlxyXG4gICAgKTtcclxuICAgIC8v0LjRgdC/0L7Qu9GM0LfQstGD0LXQvCDQv9GD0LHQu9C40YfQvdGL0Lkg0LzQtdGC0L7QtCDRgdC10LrRhtC40Lgg0LTQu9GPINC+0YLRgNC40YHQvtCy0LrQuCDQutCw0YDRgtC+0YfQtdC6XHJcbiAgICBjYXJkc0xpc3QucmVuZGVyU2VjdGlvbkl0ZW1zKCk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgYWxlcnQoZXJyKTtcclxuICB9KTtcclxuXHJcbi8v0YHQvtC30LTQsNC10Lwg0Y3QutC30LXQvNC/0LvRj9GAINC60LvQsNGB0YHQsCDQtNC70Y8g0LrQsNC20LTQvtC5INGE0L7RgNC80YssINC/0LXRgNC10LTQsNCy0LDRjyDQvtCx0YrQtdC60YIg0L3QsNGB0YLRgNC+0LXQuiDQuCDRhNC+0YDQvNGDINC00LvRjyDQstCw0LvQuNC00LDRhtC40LhcclxuY29uc3QgdmFsaWRhdGlvbkFkZCA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgY29udGFpbmVyQWRkRm9ybVN1Ym1pdCk7XHJcbmNvbnN0IHZhbGlkYXRpb25FZGl0ID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBjb250YWluZXJFZGl0Rm9ybVN1Ym1pdCk7XHJcbmNvbnN0IHZhbGlkYXRpb25BdmF0YXIgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGNvbnRhaW5lckF2YXRhckZvcm1TdWJtaXQpO1xyXG5cclxuLy/QstGL0LfRi9Cy0LDQtdC8INC/0YPQsdC70LjRh9C90YvQuSDQvNC10YLQvtC0INC90LAg0LrQsNC20LTRg9GOINGE0L7RgNC80YNcclxudmFsaWRhdGlvbkFkZC5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbnZhbGlkYXRpb25FZGl0LmVuYWJsZVZhbGlkYXRpb24oKTtcclxudmFsaWRhdGlvbkF2YXRhci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG4vL9GB0L7Qt9C00LDQtdC8INGN0LrQt9C10LzQv9C70Y/RgCDQutC70LDRgdGB0LAsINC60L7RgtC+0YDRi9C5INC+0YLQvtCx0YDQsNC20LDQtdGCINC40L3RhNC+0YDQvNCw0YbQuNGOINC+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtVxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XHJcbiAgbmFtZVNlbGVjdG9yOiBcIi5wcm9maWxlX190aXRsZVwiLFxyXG4gIGFib3V0U2VsZWN0b3I6IFwiLnByb2ZpbGVfX3N1YnRpdGxlXCIsXHJcbiAgYXZhdGFyU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3BpY1wiLFxyXG59KTtcclxuXHJcbi8v0YHQvtC30LTQsNC10Lwg0YTRg9C90LrRhtC40Y4g0LTQu9GPINGB0L7Qt9C00LDQvdC40Y8g0Y3QutC30LXQvNC/0LvRj9GA0LAg0LrQu9Cw0YHRgdCwINC60LDRgNGC0L7Rh9C60Lgo0YDQtdC90LTQtdGA0LXRgCDQtNC70Y8g0YHQtdC60YbQuNC4KVxyXG5mdW5jdGlvbiBjcmVhdGVDYXJkKGRhdGEpIHtcclxuICBjb25zdCBuZXdDYXJkID0gbmV3IENhcmQoXHJcbiAgICBkYXRhLFxyXG4gICAgaGFuZGxlQ2FyZENsaWNrLFxyXG4gICAgaGFuZGxlTGlrZUNsaWNrLFxyXG4gICAgaGFuZGxlVHJhc2hCaW5DbGljayxcclxuICAgIFwiLnBsYWNlcy10ZW1wbGF0ZV90eXBlX2RlZmF1bHRcIixcclxuICAgIHVzZXJJbmZvLnJldHVybk15SWQoKVxyXG4gICk7XHJcbiAgLy/Qv9GA0LjQvNC10L3Rj9C10Lwg0L/Rg9Cx0LvQuNGH0L3Ri9C5INC80LXRgtC+0LQg0LrQu9Cw0YHRgdCwINC00LvRjyDQvdC10L/QvtGB0YDQtdC00YHRgtCy0LXQvdC90L7Qs9C+INGE0L7RgNC80LjRgNC+0LLQsNC90LjRjyDQutCw0YDRgtC+0YfQutC4XHJcbiAgY29uc3QgbmV3Q2FyZEVsZW1lbnQgPSBuZXdDYXJkLnJlbmRlckNhcmQoKTtcclxuICByZXR1cm4gbmV3Q2FyZEVsZW1lbnQ7XHJcbn1cclxuXHJcbi8v0L7RgtC/0YDQsNCy0LjQvCDQt9Cw0L/RgNC+0YEg0L3QsCDQv9C+0LvRg9GH0LXQvdC40LUg0LjQvdGE0L4g0L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C1XHJcbmNvbnN0IHVzZXJTZXJ2ZXJEYXRhID0gYXBpLmdldFVzZXJEYXRhKCk7XHJcbnVzZXJTZXJ2ZXJEYXRhXHJcbiAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKGRhdGEpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xyXG5cclxuLy/RgdC+0LfQtNCw0LTQuNC8INGN0LrQt9C10LzQv9C70Y/RgCDQutC70LDRgdGB0LAg0L/QvtC/0LDQv9CwINGBINC60LDRgNGC0LjQvdC60L7QuSArINGB0LvRg9GI0LDRgtC10LvQuFxyXG5jb25zdCBwb3B1cFdpdGhQaWN0dXJlID0gbmV3IFBvcHVwV2l0aEltYWdlKFwiLnBvcHVwX3R5cGVfaW1hZ2VcIik7XHJcbnBvcHVwV2l0aFBpY3R1cmUuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8v0YHQvtC30LTQsNC00LjQvCDRjdC60LfQtdC80L/Qu9GP0YAg0LrQu9Cw0YHRgdCwINC/0L7Qv9Cw0L/QsCDRgSDRhNC+0YDQvNC+0Lkg0LTQu9GPINGA0LXQtNC40LrRgtC40YDQvtCy0LDQvdC40Y8g0L/RgNC+0YTQuNC70Y8gKyDRgdC70YPRiNCw0YLQtdC70LhcclxuY29uc3QgcG9wdXBXaXRoRWRpdEZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBoYW5kbGVFZGl0Rm9ybVN1Ym1pdCxcclxuICBcIi5wb3B1cF90eXBlX2VkaXQtZm9ybVwiXHJcbik7XHJcbnBvcHVwV2l0aEVkaXRGb3JtLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vL9GB0L7Qt9C00LDQtNC40Lwg0Y3QutC30LXQvNC/0LvRj9GAINC60LvQsNGB0YHQsCDQv9C+0L/QsNC/0LAg0YEg0YTQvtGA0LzQvtC5INC00LvRjyDQtNC+0LHQsNCy0LvQtdC90LjRjyDQvdC+0LLQvtCz0L4g0LzQtdGB0YLQsCArINGB0LvRg9GI0LDRgtC10LvQuFxyXG5jb25zdCBwb3B1cFdpdGhBZGRGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgaGFuZGxlQWRkRm9ybVN1Ym1pdCxcclxuICBcIi5wb3B1cF90eXBlX2FkZC1mb3JtXCJcclxuKTtcclxucG9wdXBXaXRoQWRkRm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/RgdC+0LfQtNCw0LTQuNC8INGN0LrQt9C10LzQv9C70Y/RgCDQutC70LDRgdGB0LAg0L/QvtC/0LDQv9CwINGBINGE0L7RgNC80L7QuSDQtNC70Y8g0YHQvNC10L3RiyDQsNCy0LDRgtCw0YDQsCArINGB0LvRg9GI0LDRgtC10LvQuFxyXG5jb25zdCBwb3B1cFdpdGhBdmF0YXJGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgaGFuZGxlQXZhdGFyRm9ybVN1Ym1pdCxcclxuICBcIi5wb3B1cF90eXBlX2F2YXRhci1mb3JtXCJcclxuKTtcclxucG9wdXBXaXRoQXZhdGFyRm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/Qv9GA0Lgg0LrQu9C40LrQtSDQvdCwINC60L3QvtC/0LrRgyDRgdC+0YXRgNCw0L3QuNGC0YwsINCw0LLQsNGC0LDRgCDQvtGC0L/RgNCw0LLQuNGC0YHRjyDQvdCwINGB0LXRgNCy0LXRgFxyXG5mdW5jdGlvbiBoYW5kbGVBdmF0YXJGb3JtU3VibWl0KGF2YXRhcikge1xyXG4gIGFwaVxyXG4gICAgLmNoYW5nZUF2YXRhcihhdmF0YXIpXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHJlcyk7XHJcbiAgICAgIHBvcHVwV2l0aEF2YXRhckZvcm0uY2xvc2VQb3B1cCgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcclxufVxyXG5cclxuLy/RgdC+0LfQtNCw0LTQuNC8INGN0LrQt9C10LzQv9C70Y/RgCDQutC70LDRgdGB0LAg0L/QvtC/0LDQv9CwINGBINC/0L7QtNGC0LLQtdGA0LbQtNC10L3QuNC10Lwg0YPQtNCw0LvQtdC90LjRjyArINGB0LvRg9GI0LDRgtC10LvQuFxyXG5jb25zdCBwb3B1cFdpdGhEZWxldGVWZXJpZmljYXRpb24gPSBuZXcgUG9wdXBXaXRoQ29uZmlybWF0aW9uKFxyXG4gIGhhbmRsZVJlbW92ZVN1Ym1pdCxcclxuICBcIi5wb3B1cF90eXBlX2RlbGV0ZVwiXHJcbik7XHJcbnBvcHVwV2l0aERlbGV0ZVZlcmlmaWNhdGlvbi5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/Rh9GC0L4g0L/RgNC+0LjRgdGF0L7QtNC40YIg0L/RgNC4INC90LDQttCw0YLQuNC4INC90LAg0LrQvdC+0L/QutGDINC00LAg0LIg0L/QvtC/0LDQv9C1INC/0L7QtNGC0LLQtdGA0LbQtNC10L3QuNGPINGD0LTQsNC70LXQvdC40Y9cclxuZnVuY3Rpb24gaGFuZGxlUmVtb3ZlU3VibWl0KGNhcmQpIHtcclxuICBhcGlcclxuICAgIC5kZWxldGVDYXJkKGNhcmQuX2NhcmRJZClcclxuICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgY2FyZC5yZW1vdmVDYXJkRnJvbVNlcnZlcigpO1xyXG4gICAgICBwb3B1cFdpdGhEZWxldGVWZXJpZmljYXRpb24uY2xvc2VQb3B1cCgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGFsZXJ0KGVycik7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLy/Rh9GC0L4g0L/RgNC+0LjRgdGF0L7QtNC40YIg0L/RgNC4INC90LDQttCw0YLQuNC4INC90LAg0LrQvdC+0L/QutGDINGB0L7RhdGA0LDQvdC10L3QuNGPINGE0L7RgNC80Ysg0LIg0L/QvtC/0LDQv9C1XHJcbmZ1bmN0aW9uIGhhbmRsZUVkaXRGb3JtU3VibWl0KGRhdGEpIHtcclxuICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhKTtcclxuICBhcGkuY2hhbmdlVXNlckRhdGEoZGF0YSk7XHJcbiAgcG9wdXBXaXRoRWRpdEZvcm0uY2xvc2VQb3B1cCgpO1xyXG59XHJcblxyXG4vL9GH0YLQviDQv9GA0L7QuNGB0YXQvtC00LjRgiDQv9GA0Lgg0L3QsNC20LDRgtC40Lgg0L3QsCDQutC90L7Qv9C60YMg0YHQvtC30LTQsNC90LjRjyDQvdC+0LLQvtC5INC60LDRgNGC0L7Rh9C60Lgg0LIg0L/QvtC/0LDQv9C1XHJcbmZ1bmN0aW9uIGhhbmRsZUFkZEZvcm1TdWJtaXQoZGF0YSkge1xyXG4gIGFwaVxyXG4gICAgLmFkZENhcmR0b1NlcnZlcihkYXRhKVxyXG4gICAgLnRoZW4oKCkgPT4gcG9wdXBXaXRoQWRkRm9ybS5jbG9zZVBvcHVwKCkpXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBhbGVydChlcnIpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8v0YfRgtC+INC/0YDQvtC40YHRhdC+0LTQuNGCINC/0YDQuCDQvdCw0LbQsNGC0LjQuCDQvdCwINC60LDRgNGC0LjQvdC60YMg0LrQsNGA0YLQvtGH0LrQuFxyXG5mdW5jdGlvbiBoYW5kbGVDYXJkQ2xpY2sobmFtZSwgbGluaykge1xyXG4gIHBvcHVwV2l0aFBpY3R1cmUub3BlblBvcHVwKG5hbWUsIGxpbmspO1xyXG59XHJcblxyXG4vL9GH0YLQviDQv9GA0L7QuNGB0YXQvtC00LjRgiDQv9GA0Lgg0LrQu9C40LrQtSDQvdCwINC70LDQudC6INC60LDRgNGC0L7Rh9C60LhcclxuZnVuY3Rpb24gaGFuZGxlTGlrZUNsaWNrKGNhcmQsIGhhc015TGlrZSkge1xyXG4gIGlmIChoYXNNeUxpa2UpIHtcclxuICAgIGFwaVxyXG4gICAgICAuZGVsZXRlTGlrZShjYXJkLl9jYXJkSWQpXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBjYXJkLmRlbGV0ZU15TGlrZShyZXMubGlrZXMpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGFsZXJ0KGVycik7XHJcbiAgICAgIH0pO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBhcGlcclxuICAgICAgLmxpa2VDYXJkKGNhcmQuX2NhcmRJZClcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGNhcmQuYWRkTXlMaWtlKHJlcy5saWtlcyk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgYWxlcnQoZXJyKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vL9GH0YLQviDQv9GA0L7QuNGB0YXQvtC00LjRgiDQv9GA0Lgg0LrQu9C40LrQtSDQvdCwINC60L7RgNC30LjQvdGDIC0g0L7RgtC60YDRi9Cy0LDQtdGC0YHRjyDQv9C+0L/QsNC/INC/0L7QtNGC0LLQtdGA0LbQtNC10L3QuNGPINGD0LTQsNC70LXQvdC40Y9cclxuZnVuY3Rpb24gaGFuZGxlVHJhc2hCaW5DbGljayhjYXJkKSB7XHJcbiAgcG9wdXBXaXRoRGVsZXRlVmVyaWZpY2F0aW9uLm9wZW5Qb3B1cChjYXJkKTtcclxufVxyXG5cclxuLy/RgdC70YPRiNCw0YLQtdC70Ywg0LrQu9C40LrQsCDQvdCwINCw0LLQsNGC0LDRgNC60YNcclxuYXZhLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgcG9wdXBXaXRoQXZhdGFyRm9ybS5vcGVuUG9wdXAoKTtcclxufSk7XHJcblxyXG4vL9GB0LvRg9GI0LDRgtC10LvRjCDQtNC70Y8g0LrQu9C40LrQsCDQvdCwINC60L3QvtC/0LrRgyDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINC/0YDQvtGE0LjQu9GPXHJcbnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgY29uc3QgeyBuYW1lLCBhYm91dCB9ID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuICB1c2VyTmFtZUlucHV0LnZhbHVlID0gbmFtZTtcclxuICB1c2VyRGVzY3JpcHRpb25JbnB1dC52YWx1ZSA9IGFib3V0O1xyXG4gIHZhbGlkYXRpb25FZGl0LnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIHBvcHVwV2l0aEVkaXRGb3JtLm9wZW5Qb3B1cCgpO1xyXG59KTtcclxuXHJcbi8v0YHQu9GD0YjQsNGC0LXQu9GMINC00LvRjyDQutC70LjQutCwINC90LAg0LrQvdC+0L/QutGDINC00L7QsdCw0LLQu9C10L3QuNGPINC90L7QstC+0Lkg0LrQsNGA0YLQvtGH0LrQuFxyXG5jYXJkQWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgdmFsaWRhdGlvbkFkZC5yZXNldFZhbGlkYXRpb24oKTtcclxuICBwb3B1cFdpdGhBZGRGb3JtLm9wZW5Qb3B1cCgpO1xyXG59KTtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XHJcbiAgICB0aGlzLl9iYXNlVXJsID0gb3B0aW9ucy5iYXNlVXJsO1xyXG4gICAgdGhpcy5faGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycztcclxuICB9XHJcblxyXG4gIF9oYW5kbGVFcnJvcihyZXMpIHtcclxuICAgIGlmIChyZXMub2spIHtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoXCLQn9GA0L7QuNC30L7RiNC70LAg0L7RiNC40LHQutCwLCDRh9GC0L4t0YLQviDQv9C+0LvQvtC80LDQu9C+0YHRjC4g0KHQvtGH0YPQstGB0YLQstGD0LXQvDooXCIpO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9JHtcImNhcmRzXCJ9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZUVycm9yKTtcclxuICB9XHJcblxyXG4gIGFkZENhcmR0b1NlcnZlcihkYXRhKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0ke1wiY2FyZHNcIn1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXHJcbiAgICAgICAgbGluazogZGF0YS5saW5rLFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlRXJyb3IpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckRhdGEoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0ke1widXNlcnMvbWVcIn1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlRXJyb3IpO1xyXG4gIH1cclxuXHJcbiAgY2hhbmdlVXNlckRhdGEoeyBuYW1lLCBhYm91dCB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0ke1widXNlcnMvbWVcIn1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICBhYm91dDogYWJvdXQsXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVFcnJvcik7XHJcbiAgfVxyXG5cclxuICBjaGFuZ2VBdmF0YXIoeyBhdmF0YXIgfSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9JHtcInVzZXJzL21lL2F2YXRhclwifWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBhdmF0YXI6IGF2YXRhcixcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZUVycm9yKTtcclxuICB9XHJcblxyXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0ke1wiY2FyZHMvXCJ9JHtjYXJkSWR9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZUVycm9yKTtcclxuICB9XHJcblxyXG4gIGxpa2VDYXJkKGNhcmRJZCkgeyAgICBcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfSR7XCJjYXJkcy9saWtlcy9cIn0ke2NhcmRJZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlRXJyb3IpO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlTGlrZUZyb21DYXJkKGNhcmRJZCkgeyAgICBcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfSR7XCJjYXJkcy9saWtlcy9cIn0ke2NhcmRJZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlRXJyb3IpO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQ2FyZCIsImRhdGEiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVMaWtlQ2xpY2siLCJoYW5kbGVUcmFzaEJpbkNsaWNrIiwiY2FyZFNlbGVjdG9yIiwidXNlcklkIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9vd25lcklkIiwib3duZXIiLCJfaWQiLCJfY2FyZElkIiwiX2xpa2VzIiwibGlrZXMiLCJfbXlJZCIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZUxpa2VDbGljayIsIl9oYW5kbGVUcmFzaEJpbkNsaWNrIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9lbGVtZW50IiwiX2dldFRlbXBsYXRlIiwiX3NldENhcmRBY3Rpb25zTGlzdGVuZXJzIiwiX2ltYWdlIiwiX3RpdGxlIiwic3JjIiwiYWx0IiwidGV4dENvbnRlbnQiLCJfdHJhc2hCaW4iLCJfbGlrZUNvdW50ZXIiLCJsZW5ndGgiLCJfbGlrZUJ0biIsImhhc015TGlrZSIsInNvbWUiLCJsaWtlIiwicmVtb3ZlIiwiY2xhc3NMaXN0IiwiYWRkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIkZvcm1WYWxpZGF0b3IiLCJjb25maWd1cmF0aW9uIiwiZm9ybSIsIl9mb3JtIiwiX3BvcHVwRm9ybSIsInBvcHVwRm9ybSIsIl9wb3B1cElucHV0RmllbGQiLCJwb3B1cEZpZWxkIiwiX3BvcHVwU2F2ZUJ1dHRvbiIsInBvcHVwU2F2ZUJ1dHRvbiIsIl9maWVsZEVycm9yIiwicG9wdXBGaWVsZEVycm9yIiwiX2Vycm9yQWN0aXZlIiwiZXJyb3JBY3RpdmUiLCJfYnV0dG9uRGlzYWJsZWQiLCJwb3B1cEJ1dHRvbkRpc2FibGVkIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfc2F2ZUJ0biIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiX3NldElucHV0TGlzdGVuZXJzIiwiX3RvZ2dsZVNhdmVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJpbnB1dCIsIl9pc1ZhbGlkIiwiZXJyb3JNZXNzYWdlIiwiZm9ybUVycm9yIiwiaWQiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGFzSW52YWxpZEZpZWxkIiwiZGlzYWJsZWQiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX3JlbmRlcmVyIiwiX2l0ZW1zIiwiX2NvbnRhaW5lckVsZW1lbnQiLCJpdGVtIiwiY2FyZCIsInNldEl0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsInBvcHVwRWRpdEZvcm0iLCJwcm9maWxlRWRpdEJ1dHRvbiIsImNvbnRhaW5lckVkaXRGb3JtU3VibWl0IiwicG9wdXBBZGRGb3JtIiwidXNlck5hbWVJbnB1dCIsInVzZXJEZXNjcmlwdGlvbklucHV0IiwiY2FyZEFkZEJ1dHRvbiIsImNvbnRhaW5lckFkZEZvcm1TdWJtaXQiLCJjb250YWluZXJBdmF0YXJGb3JtU3VibWl0IiwiYXZhIiwiY29uZmlnIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50IiwiX2Nsb3NlT25Fc2MiLCJiaW5kIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleUNvZGUiLCJjbG9zZVBvcHVwIiwidGFyZ2V0IiwiY29udGFpbnMiLCJfY2xvc2VCdXR0b24iLCJfb3ZlcmxheUxpc3QiLCJvdmVybGF5IiwiX2hhbmRsZUNsb3NlT25PdmVybGF5IiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9mb3JtRWxlbWVudCIsIl9mb3JtVmFsdWVzIiwidmFsdWUiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlBvcHVwV2l0aEltYWdlIiwiUG9wdXBXaXRoQ29uZmlybWF0aW9uIiwiX2NhcmQiLCJVc2VySW5mbyIsIm5hbWVTZWxlY3RvciIsImFib3V0U2VsZWN0b3IiLCJhdmF0YXJTZWxlY3RvciIsIl9uYW1lRWxlbWVudCIsIl9hYm91dEVsZW1lbnQiLCJfYXZhdGFyRWxlbWVudCIsImFib3V0IiwiYXZhdGFyIiwiYXBpIiwiQXBpIiwib3B0aW9ucyIsIl9iYXNlVXJsIiwiYmFzZVVybCIsIl9oZWFkZXJzIiwiaGVhZGVycyIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJmZXRjaCIsIm1ldGhvZCIsInRoZW4iLCJfaGFuZGxlRXJyb3IiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImNhcmRJZCIsImF1dGhvcml6YXRpb24iLCJnZXRJbml0aWFsQ2FyZHMiLCJjcmVhdGVDYXJkIiwicmVuZGVyU2VjdGlvbkl0ZW1zIiwiY2F0Y2giLCJlcnIiLCJhbGVydCIsInZhbGlkYXRpb25BZGQiLCJ2YWxpZGF0aW9uRWRpdCIsInZhbGlkYXRpb25BdmF0YXIiLCJlbmFibGVWYWxpZGF0aW9uIiwidXNlckluZm8iLCJyZXR1cm5NeUlkIiwicmVuZGVyQ2FyZCIsImdldFVzZXJEYXRhIiwic2V0VXNlckluZm8iLCJjb25zb2xlIiwibG9nIiwicG9wdXBXaXRoUGljdHVyZSIsInNldEV2ZW50TGlzdGVuZXJzIiwicG9wdXBXaXRoRWRpdEZvcm0iLCJjaGFuZ2VVc2VyRGF0YSIsInBvcHVwV2l0aEFkZEZvcm0iLCJhZGRDYXJkdG9TZXJ2ZXIiLCJwb3B1cFdpdGhBdmF0YXJGb3JtIiwiY2hhbmdlQXZhdGFyIiwicG9wdXBXaXRoRGVsZXRlVmVyaWZpY2F0aW9uIiwiZGVsZXRlQ2FyZCIsInJlbW92ZUNhcmRGcm9tU2VydmVyIiwib3BlblBvcHVwIiwiZGVsZXRlTGlrZSIsImRlbGV0ZU15TGlrZSIsImxpa2VDYXJkIiwiYWRkTXlMaWtlIiwiZ2V0VXNlckluZm8iLCJyZXNldFZhbGlkYXRpb24iXSwic291cmNlUm9vdCI6IiJ9